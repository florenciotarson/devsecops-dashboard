name: DevSecOps Security Scan

on: [push, pull_request]

jobs:
  # -----------------------------
  # 1) MINIMAL SCOUT DEBUG
  # -----------------------------
  scoutsuite-debug:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python (Minimal Debug)
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install & Test ScoutSuite (Debug Only)
        run: |
          set -euxo pipefail

          echo "=== Create and activate venv ==="
          python -m venv venv
          source venv/bin/activate

          echo "=== Upgrade pip & install ScoutSuite ==="
          pip install --upgrade pip
          pip install scoutsuite

          echo "=== Confirm version & help ==="
          # Use the CLI command 'scout' since the entry point is named that way
          scout --version
          scout --help

          echo "=== Minimal ScoutSuite debug done ==="

  # --------------------------------------
  # 2) FULL DEVSECOPS SECURITY PIPELINE
  # --------------------------------------
  security:
    name: Run Security Scans
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # 1) Pin Python version
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # 2) Install Dependencies
      - name: Install Dependencies
        run: |
          pip install semgrep checkov scoutsuite
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b ./bin

      # 3) Run Semgrep (Static Code Analysis)
      - name: Run Semgrep (Static Code Analysis)
        continue-on-error: true
        run: |
          semgrep scan --config=auto --json -o semgrep-results.json

      # 4) Run Trivy (Dependency Scan)
      - name: Run Trivy (Dependency Scan)
        continue-on-error: true
        run: |
          ./bin/trivy fs . --format json --output trivy-results.json

      # 5) Run Checkov (Terraform Security Scan)
      - name: Run Checkov (Terraform Security Scan)
        continue-on-error: true
        run: |
          mkdir -p infra
          checkov -d infra/ --output json --output-file-path checkov-results.json

      # 6) Run Prowler (AWS Security Audit)
      - name: Run Prowler (AWS Security Audit)
        continue-on-error: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          rm -rf prowler-repo
          git clone https://github.com/prowler-cloud/prowler.git prowler-repo
          cd prowler-repo
          pip install poetry
          poetry install --no-root
          poetry run python prowler.py -M json-ocsf -o prowler-report.json

      # 7) Run ScoutSuite (AWS Security Report)
      - name: Run ScoutSuite (AWS Security Report)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          # Create & activate a separate venv for ScoutSuite
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install scoutsuite

          mkdir -p scoutsuite-report
          # Run ScoutSuite using the CLI command "scout"
          scout -p aws --report-dir scoutsuite-report

      # 8) Upload security reports as artifacts
      - name: Upload Security Reports as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            semgrep-results.json
            trivy-results.json
            checkov-results.json
            prowler-repo/prowler-report.json
            scoutsuite-report/
